# Universal GPU Support via Vulkan (AMD/Intel/NVIDIA)
# Build stage for Go binary
FROM golang:1.24-alpine3.21 AS go-builder

# Install build dependencies
# hadolint ignore=DL3018
RUN apk add --no-cache git gcc musl-dev pkgconfig opus-dev

WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build binary with CGO
# Using dynamic linking as static opus lib not available for all architectures
RUN CGO_ENABLED=1 go build -ldflags '-w -s' \
    -o discord-voice-mcp ./cmd/discord-voice-mcp

# For AMD64: Use Vulkan-enabled image (works on ALL GPUs)
# hadolint ignore=DL3007
FROM ghcr.io/kth8/whisper-server-vulkan:latest AS whisper-amd64

# For ARM64: Build from source (Vulkan support for ARM GPUs)
FROM ubuntu:24.04 AS whisper-arm64

# Install build dependencies for ARM64
# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    cmake \
    git \
    ca-certificates \
    pkg-config \
    libopenblas-dev \
    libvulkan-dev \
    && rm -rf /var/lib/apt/lists/*

# Clone and build whisper.cpp for ARM64
WORKDIR /build
# Pin to stable version for reproducible builds
ARG WHISPER_CPP_VERSION=v1.7.3
RUN git clone --depth 1 --branch ${WHISPER_CPP_VERSION} https://github.com/ggml-org/whisper.cpp.git

WORKDIR /build/whisper.cpp
RUN cmake -B build \
        -DCMAKE_BUILD_TYPE=Release \
        -DGGML_VULKAN=ON \
        -DGGML_BLAS=ON \
        -DGGML_BLAS_VENDOR=OpenBLAS \
        -DGGML_ARM_NEON=ON \
        -DBUILD_SHARED_LIBS=ON && \
    cmake --build build --config Release -j"$(nproc)"

# Create consistent structure matching AMD64 prebuilt
RUN mkdir -p /app && \
    cp build/bin/whisper-cli /usr/local/bin/whisper && \
    cp build/bin/whisper-server /usr/local/bin/whisper-server && \
    cp build/src/libwhisper.so* /usr/local/lib/ && \
    cp build/ggml/src/libggml*.so* /usr/local/lib/

# Architecture selector
ARG TARGETARCH
# hadolint ignore=DL3006
FROM whisper-${TARGETARCH} AS whisper-source

# Final stage - Ubuntu base for Vulkan support
FROM ubuntu:24.04 AS final

# Install runtime dependencies including Vulkan
# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    libopus0 \
    libgomp1 \
    libopenblas0 \
    libvulkan1 \
    mesa-vulkan-drivers \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Go binary from builder
COPY --from=go-builder /app/discord-voice-mcp .

# Copy whisper binaries from architecture-specific source
COPY --from=whisper-source /usr/local/bin/whisper* /usr/local/bin/
COPY --from=whisper-source /usr/local/lib/lib*.so* /usr/local/lib/

# Update library cache
RUN ldconfig

# Create directories and add user
RUN mkdir -p /models && \
    useradd -m -u 1000 -s /bin/bash mcp

USER mcp

# Set default transcriber type for whisper image
ENV TRANSCRIBER_TYPE=whisper
ENV WHISPER_USE_GPU=true

# Run the binary
CMD ["./discord-voice-mcp"]