# Development Dockerfile with hot reload support
FROM node:24-slim

# Install system dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    build-essential \
    git \
    wget \
    unzip \
    ffmpeg \
    curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install nodemon for hot reload
RUN npm install -g nodemon

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev)
RUN npm install

# Create necessary directories
RUN mkdir -p models temp sessions exports credentials logs

# Download models based on build arguments
ARG VOSK_MODEL=small
ARG WHISPER_MODEL=base.en

# Download Vosk model
WORKDIR /app/models
RUN if [ "$VOSK_MODEL" = "small" ]; then \
        wget -q https://alphacephei.com/vosk/models/vosk-model-small-en-us-0.15.zip && \
        unzip -q vosk-model-small-en-us-0.15.zip && \
        rm vosk-model-small-en-us-0.15.zip && \
        mv vosk-model-small-en-us-0.15 vosk-model; \
    elif [ "$VOSK_MODEL" = "large" ]; then \
        wget -q https://alphacephei.com/vosk/models/vosk-model-en-us-0.22.zip && \
        unzip -q vosk-model-en-us-0.22.zip && \
        rm vosk-model-en-us-0.22.zip && \
        mv vosk-model-en-us-0.22 vosk-model; \
    else \
        wget -q https://alphacephei.com/vosk/models/vosk-model-en-us-0.22-lgraph.zip && \
        unzip -q vosk-model-en-us-0.22-lgraph.zip && \
        rm vosk-model-en-us-0.22-lgraph.zip && \
        mv vosk-model-en-us-0.22-lgraph vosk-model; \
    fi

# Build whisper.cpp
WORKDIR /tmp
RUN git clone https://github.com/ggerganov/whisper.cpp.git && \
    cd whisper.cpp && \
    make && \
    cd models && \
    bash ./download-ggml-model.sh ${WHISPER_MODEL} && \
    cp /tmp/whisper.cpp/main /app/whisper.cpp/ && \
    cp /tmp/whisper.cpp/models/ggml-*.bin /app/models/ && \
    rm -rf /tmp/whisper.cpp

WORKDIR /app

# Copy source code (will be overridden by volume mount)
COPY src/ ./src/
COPY scripts/ ./scripts/

# Make scripts executable
RUN chmod +x scripts/*.sh

# Set environment variables
ENV NODE_ENV=development \
    PORT=3000

# Create non-root user
RUN useradd -m -u 1000 mcp && \
    chown -R mcp:mcp /app

USER mcp

# Use nodemon for hot reload
CMD ["nodemon", "--watch", "src", "--ext", "js,json", "--inspect=0.0.0.0:9229", "src/mcp-server.js"]