name: Build and Push Docker Images

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      provider:
        description: 'Transcription provider'
        required: true
        default: 'vosk'
        type: choice
        options:
          - vosk
          - whisper
          - google
      vosk_model:
        description: 'Vosk model size'
        required: false
        default: 'small'
        type: choice
        options:
          - small
          - medium
          - large
      whisper_model:
        description: 'Whisper model'
        required: false
        default: 'base.en'
        type: choice
        options:
          - tiny.en
          - base.en
          - small.en
          - medium.en
          - large-v3

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        include:
          # Vosk variants
          - provider: vosk
            vosk_model: small
            tag_suffix: vosk-small
          - provider: vosk
            vosk_model: medium
            tag_suffix: vosk-medium
          - provider: vosk
            vosk_model: large
            tag_suffix: vosk-large
          
          # Whisper variants
          - provider: whisper
            whisper_model: tiny.en
            tag_suffix: whisper-tiny
          - provider: whisper
            whisper_model: base.en
            tag_suffix: whisper-base
          - provider: whisper
            whisper_model: small.en
            tag_suffix: whisper-small
          - provider: whisper
            whisper_model: medium.en
            tag_suffix: whisper-medium
          
          # Google Cloud variant
          - provider: google
            tag_suffix: google

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-${{ matrix.tag_suffix }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && matrix.provider == 'vosk' && matrix.vosk_model == 'small' }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PROVIDER=${{ matrix.provider }}
            VOSK_MODEL=${{ matrix.vosk_model }}
            WHISPER_MODEL=${{ matrix.whisper_model }}

  build-dev:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for dev image
        id: meta-dev
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
            suffix=-dev
          tags: |
            type=ref,event=branch
            type=raw,value=dev,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Build and push dev Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile.dev
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta-dev.outputs.tags }}
          labels: ${{ steps.meta-dev.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PROVIDER=vosk
            VOSK_MODEL=small
            WHISPER_MODEL=base.en