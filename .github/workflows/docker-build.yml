name: Docker Build and Test

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    strategy:
      matrix:
        include:
          # Standard Dockerfile
          - dockerfile: Dockerfile
            suffix: ""
            platforms: linux/amd64,linux/arm64
          # Whisper Dockerfile with Vulkan support (universal GPU)
          - dockerfile: Dockerfile.whisper
            suffix: "-whisper"
            platforms: linux/amd64,linux/arm64
          # Whisper CUDA Dockerfile (NVIDIA optimized)
          - dockerfile: Dockerfile.whisper-cuda
            suffix: "-whisper-cuda"
            platforms: linux/amd64
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Docker Hub login removed - only using GitHub Container Registry
      
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # For branches
            type=ref,event=branch
            # For PRs  
            type=ref,event=pr
            # For tags
            type=ref,event=tag
            # Latest tag for main branch
            type=raw,value=latest,enable={{is_default_branch}}
          flavor: |
            latest=false
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}${{ matrix.suffix }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
            BUILD_DATE=${{ github.event.repository.updated_at }}

  docker-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Docker Hub login removed - using only GitHub Container Registry
      
      - name: Create and push manifests
        run: |
          # Extract the tag from the current ref
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
          elif [[ "${{ github.ref }}" == refs/heads/* ]]; then
            TAG="${{ github.ref_name }}"
          else
            TAG="latest"
          fi
          
          # Create manifest for standard image
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG} \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-linux-amd64 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-linux-arm64
          
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}
          
          # Create manifest for whisper image (Vulkan - universal GPU)
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-whisper \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-whisper-linux-amd64 \
            --amend ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-whisper-linux-arm64
          
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${TAG}-whisper
          
          # Push whisper-cuda image (NVIDIA optimized - single platform)
          # No manifest needed as it's single platform (amd64 only)