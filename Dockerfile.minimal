# Build stage
FROM golang:1.24-alpine3.20 AS builder

# Install build dependencies (including opus for gopus)
# hadolint ignore=DL3018
RUN apk add --no-cache git gcc musl-dev pkgconfig opus-dev

# Create non-root user
RUN adduser -D -u 10001 appuser

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build dynamic binary with CGO for opus support
RUN CGO_ENABLED=1 \
    go build -ldflags '-w -s' \
    -o discord-voice-mcp ./cmd/discord-voice-mcp

# Final stage - minimal alpine for opus runtime
FROM alpine:3.20

# Install only runtime opus library
# hadolint ignore=DL3018
RUN apk add --no-cache opus

WORKDIR /app

# Copy passwd file for non-root user
COPY --from=builder /etc/passwd /etc/passwd

# Copy binary from builder
COPY --from=builder /app/discord-voice-mcp .

# Run as non-root user
USER appuser

ENTRYPOINT ["/discord-voice-mcp"]