# Proof of Concept: Universal GPU Support via Vulkan
# This approach uses Vulkan which works on ALL GPUs (NVIDIA, AMD, Intel)

# Build stage for Go binary
FROM golang:1.24-alpine3.21 AS go-builder

# Install build dependencies
# hadolint ignore=DL3018
RUN apk add --no-cache git gcc musl-dev pkgconfig opus-dev

WORKDIR /app

# Copy go mod files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build binary with CGO
RUN CGO_ENABLED=1 go build -ldflags '-w -s' \
    -o discord-voice-mcp ./cmd/discord-voice-mcp

# Use community Vulkan-enabled whisper image for GPU support
# This works on NVIDIA, AMD, and Intel GPUs
FROM ghcr.io/kth8/whisper-server-vulkan:latest AS whisper-vulkan

# Note: This image already includes whisper binaries at /usr/local/bin/whisper

# Final stage - minimal runtime
FROM ubuntu:22.04

# Install runtime dependencies including Vulkan loader
# hadolint ignore=DL3008
RUN apt-get update && apt-get install -y --no-install-recommends \
    ffmpeg \
    libopus0 \
    libgomp1 \
    libopenblas0 \
    libvulkan1 \
    mesa-vulkan-drivers \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy Go binary from builder
COPY --from=go-builder /app/discord-voice-mcp .

# Copy whisper binary from Vulkan image
COPY --from=whisper-vulkan /usr/local/bin/whisper* /usr/local/bin/

# Create directories and add user
RUN mkdir -p /models && \
    useradd -m -u 1000 -s /bin/bash mcp

USER mcp

# Set default transcriber type for whisper image
ENV TRANSCRIBER_TYPE=whisper
ENV WHISPER_USE_GPU=true

# Run the binary
CMD ["./discord-voice-mcp"]

# Usage:
# NVIDIA GPU: docker run --gpus all ...
# AMD GPU: docker run --device=/dev/dri --group-add video ...
# Intel GPU: docker run --device=/dev/dri --group-add video ...
# CPU fallback: docker run ... (will use CPU if no GPU available)